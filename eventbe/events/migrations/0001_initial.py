# Generated by Django 3.2.17 on 2023-04-08 19:26

from django.conf import settings
from django.db import migrations
from django.db import models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'title',
                    models.CharField(max_length=20, verbose_name='title'),
                ),
                ('slug', models.SlugField(verbose_name='slug')),
                (
                    'created_at',
                    models.DateField(
                        auto_now_add=True, verbose_name='created at'
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True, verbose_name='is active'
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'title',
                    models.CharField(max_length=40, verbose_name='title'),
                ),
                (
                    'description',
                    models.TextField(
                        max_length=300, verbose_name='description'
                    ),
                ),
                ('datetime', models.DateTimeField(verbose_name='date & time')),
                (
                    'location_x',
                    models.FloatField(null=True, verbose_name='location x'),
                ),
                (
                    'location_y',
                    models.FloatField(null=True, verbose_name='location y'),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('pub', 'public'),
                            ('authonly', 'authorized_only'),
                            ('priv', 'private'),
                        ],
                        default='pub',
                        help_text='Event Status',
                        max_length=8,
                        verbose_name='status',
                    ),
                ),
                (
                    'created_at',
                    models.DateField(
                        auto_now_add=True, verbose_name='created at'
                    ),
                ),
                (
                    'is_offline',
                    models.BooleanField(
                        default=False, verbose_name='is offline'
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True, verbose_name='is active'
                    ),
                ),
                (
                    'is_published',
                    models.BooleanField(
                        default=True, verbose_name='is published'
                    ),
                ),
                (
                    'is_frozen',
                    models.BooleanField(
                        default=False, verbose_name='is frozen'
                    ),
                ),
                (
                    'organizer',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='event author',
                    ),
                ),
                (
                    'tags',
                    models.ManyToManyField(
                        help_text='Event must have at least 1 tag',
                        to='events.Tag',
                        verbose_name='tags',
                    ),
                ),
            ],
        ),
    ]
